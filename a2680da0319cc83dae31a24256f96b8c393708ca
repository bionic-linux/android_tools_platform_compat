{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1639a67e_3cc0953c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1039338
      },
      "writtenOn": "2021-04-16T16:44:21Z",
      "side": 1,
      "message": "PTAL",
      "revId": "a2680da0319cc83dae31a24256f96b8c393708ca",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39966cbb_22d64925",
        "filename": "hiddenapi/prevent_additions.sh",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1010681
      },
      "writtenOn": "2021-04-15T13:52:45Z",
      "side": 1,
      "message": "can we explicitly state the packages? (could be passed as an arg to the script?)",
      "range": {
        "startLine": 12,
        "startChar": 30,
        "endLine": 12,
        "endChar": 38
      },
      "revId": "a2680da0319cc83dae31a24256f96b8c393708ca",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4bfc8462_7a24ee78",
        "filename": "hiddenapi/prevent_additions.sh",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1039338
      },
      "writtenOn": "2021-04-16T16:44:21Z",
      "side": 1,
      "message": "It is a little misleading (copy and paste from the existing frameworks/base/tools/hiddenapi/exclude.sh script) as it is all the packages contained within the hiddenapi/hiddenapi-*.txt files. Restricting it to a set of packages would be meaningless.\n\nThe entries that are affected are output below this message so it should be very clear which ones are new.\n\nUpdated the message.",
      "parentUuid": "39966cbb_22d64925",
      "range": {
        "startLine": 12,
        "startChar": 30,
        "endLine": 12,
        "endChar": 38
      },
      "revId": "a2680da0319cc83dae31a24256f96b8c393708ca",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "199fa961_2fd6fcd9",
        "filename": "hiddenapi/prevent_additions.sh",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1010681
      },
      "writtenOn": "2021-04-19T09:32:41Z",
      "side": 1,
      "message": "Oh, so you\u0027re requiring that no additions are made to those files?\n\nWhat about renames? This will prevent those too, as they show as an add and remove in the git diff view. That doesn\u0027t seem right and will require people of bypass the upload hook. (renames are ok as per go/nonsdk/ref/policy)\n\nSince we have go/nonsdk/ref/presubmit I think it would be much better to enforce that there. We have login in there to distinguish adds from renames already.",
      "parentUuid": "4bfc8462_7a24ee78",
      "range": {
        "startLine": 12,
        "startChar": 30,
        "endLine": 12,
        "endChar": 38
      },
      "revId": "a2680da0319cc83dae31a24256f96b8c393708ca",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0fd4ef66_647f45f6",
        "filename": "hiddenapi/prevent_additions.sh",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1039338
      },
      "writtenOn": "2021-04-19T09:44:48Z",
      "side": 1,
      "message": "The intent of this is to encourage people to switch to using UnsupportedAppUsage annotations. If someone is renaming a method then they can easily just add an annotation and remove the entry from the file altogether.\n\nIt is basically replicating the mechanism that already exists in frameworks/base/tools/hiddenapi/exclude.sh to prevent additional entries. This is simpler as it does not need to treat the entries differently depending on what package they\u0027re in.\n\nIt is not clear to me what the presubmit check does. If seems likely based on https://r.android.com/1228421 that it generates the hidden API flags and then compares that against some base set to see the difference. If so then it probably does not care whether the flags come from annotations or flag files and so it is not doing the same job as this script will.",
      "parentUuid": "199fa961_2fd6fcd9",
      "range": {
        "startLine": 12,
        "startChar": 30,
        "endLine": 12,
        "endChar": 38
      },
      "revId": "a2680da0319cc83dae31a24256f96b8c393708ca",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}